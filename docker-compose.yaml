services:
  #  api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3000:3000
  #   volumes:
  #      - .:/home/node/app  
  #   environment:
  #     DATABASE_URL: mongodb://root:root@mongodb:27017/dev
  #     PROMETHEUS_URI: http://prometheus:9090
  #     GRAFANA_URI: http://grafana:3001
  #   depends_on:
  #     - mongodb
  #     - prometheus
  #     - grafana  
  #   networks:
  #      - my-network  

  mongodb:
    image: docker.io/bitnami/mongodb:7.0
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_ROOT_USERNAME: root
      MONGODB_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey123
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: root
      MONGODB_DATABASE: dev
    volumes:
       - 'mongodb_data:/bitnami/mongodb'
       #- './init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh'
    networks:
      - my-network 

  mongodb-secondary:
    image: docker.io/bitnami/mongodb:7.0
    depends_on:
      - mongodb
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-secondary
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_INITIAL_PRIMARY_HOST: mongodb
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_KEY: replicasetkey123
    networks:
      - my-network

  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:7.0
    depends_on:
      - mongodb
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-arbiter
      MONGODB_REPLICA_SET_MODE: arbiter
      MONGODB_INITIAL_PRIMARY_HOST: mongodb
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_KEY: replicasetkey123
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - my-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3001:3001
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - my-network 

networks:
  my-network:
    external: true

volumes:
  mongodb_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local